[{"path":"https://matcasti.github.io/writR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://matcasti.github.io/writR/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://matcasti.github.io/writR/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://matcasti.github.io/writR/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://matcasti.github.io/writR/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://matcasti.github.io/writR/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://matcasti.github.io/writR/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://matcasti.github.io/writR/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://matcasti.github.io/writR/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://matcasti.github.io/writR/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://matcasti.github.io/writR/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://matcasti.github.io/writR/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://matcasti.github.io/writR/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://matcasti.github.io/writR/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://matcasti.github.io/writR/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://matcasti.github.io/writR/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://matcasti.github.io/writR/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://matcasti.github.io/writR/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://matcasti.github.io/writR/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://matcasti.github.io/writR/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://matcasti.github.io/writR/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"writR: Inferential statistics and reporting in APA style. Copyright (C) 2021 Matías Castillo Aguilar  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. writR  Copyright (C) 2021 Matías Castillo Aguilar This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://matcasti.github.io/writR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matías Castillo-Aguilar. Author, maintainer.","code":""},{"path":"https://matcasti.github.io/writR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Castillo-Aguilar M (2024). writR: Inferential statistics reporting APA style. R package version 1.0.1, https://github.com/matcasti/writR.","code":"@Manual{,   title = {writR: Inferential statistics and reporting in APA style},   author = {Matías Castillo-Aguilar},   year = {2024},   note = {R package version 1.0.1},   url = {https://github.com/matcasti/writR}, }"},{"path":"https://matcasti.github.io/writR/index.html","id":"id_-writr","dir":"","previous_headings":"","what":"Inferential statistics and reporting in APA style","title":"Inferential statistics and reporting in APA style","text":"R package automated inferential testing (group differences) reporting based parametric assumptions, tested automatically test selection.","code":""},{"path":"https://matcasti.github.io/writR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Inferential statistics and reporting in APA style","text":"can install development version writR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"matcasti/writR\")"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://matcasti.github.io/writR/index.html","id":"automated-testing","dir":"","previous_headings":"","what":"Automated testing","title":"Inferential statistics and reporting in APA style","text":"default, k_sample(), checks automatically assumptions data based parameters supplied test selection.","code":"library(writR) # Load the writR package   set.seed(123) # for reproducibility diets <- data.frame(     weight = c(rnorm(n = 100/2, mean = 70, sd = 7)   # Treatment              , rnorm(n = 100/2, mean = 66, sd = 7) ) # Control   , diet = gl(n = 2, k = 100/2, labels = c('Treatment', 'Control') ) )    result <- k_sample(    data = diets,    x = \"diet\", # independent variable   y = \"weight\", # dependent variable   type = NULL, # default, checks assumptions then choose appropiate test )  print(result) # Detailed statistical results #>         y      x statistic    df df.error    p.value         method   estimate #>    <char> <char>     <num> <num>    <num>      <num>         <char>      <num> #> 1: weight   diet  6.292829     1       98 0.01376398 Fisher's ANOVA 0.05026771 #>    conf.level    conf.low conf.high              effectsize n_obs #>         <num>       <num>     <num>                  <char> <int> #> 1:       0.95 0.003432758         1 Omega-squared (partial)   100"},{"path":"https://matcasti.github.io/writR/index.html","id":"inline-results-in-apa-style","dir":"","previous_headings":"","what":"Inline results in APA style","title":"Inferential statistics and reporting in APA style","text":"core function: k_sample() default return list length 13 detailed statistics, inline results desired, lablr() function can used. example using data : analysis effects treatment, shows experimental group greater weight control, inline$full. translates : analysis effects treatment, shows experimental group greater weight control, F(1, 98) = 6.29, p 0.014, omega2 = 0.05, CI95 [0.00, 1.00]. also let perform centrality dispersion statistics inline results using cent_disp() function. next example illustrates usage: effect vitamin C tooth growth explored Guinea Pigs, group using orange juice (OJ) demonstrated similar values (result['OJ','2']) vitamin C (VC) group (result['VC','2']) tooth length (TL) 2 miligrams/day. However, doses 0.5 miligrams/day, OJ group show greater TL (result['OJ','0.5']) VC group (result['VC','0.5']). translates : effect vitamin C tooth growth explored Guinea Pigs, group using orange juice (OJ) demonstrated similar values (M = 26.1, SD = 2.7) vitamin C (VC) group (M = 26.1, SD = 4.8) tooth length (TL) 2 miligrams/day. However, doses 0.5 miligrams/day, OJ group show greater TL (M = 13.2, SD = 4.5) VC group (M = 8, SD = 2.7). can also set custom expressions using glue syntax like : allows use function available global environment attached packages, even custom functions:","code":"data <- datasets::ToothGrowth  result <- with(data, tapply(   len,              ## Variable to describe   list(supp, dose), ## Variables to aggregate on   cent_disp         ## cent_disp() function   ))  as.data.frame(result) #>                       0.5                      1                      2 #> OJ *M* = 13.2, *SD* = 4.5 *M* = 22.7, *SD* = 3.9 *M* = 26.1, *SD* = 2.7 #> VC    *M* = 8, *SD* = 2.7 *M* = 16.8, *SD* = 2.5 *M* = 26.1, *SD* = 4.8 cent_disp(   x = data$len,    str.a = \"The median for length was {median} mm (MAD = {mad}, IQR = {IQR})\",   k = 1 # For 1 decimal places ) #> The median for length was 19.2 mm (MAD = 9, IQR = 12.2) q25 <- function(i) quantile(i, 0.25)[[1L]] q75 <- function(j) quantile(j, 0.75)[[1L]]  cent_disp(   x = data$len,   str.a = \"The median for length was {median} mm (IQR = [{q25}, {q75}])\",   k = 1 ) #> The median for length was 19.2 mm (IQR = [13.1, 25.3])"},{"path":"https://matcasti.github.io/writR/index.html","id":"paired-samples-design","dir":"","previous_headings":"","what":"Paired samples design","title":"Inferential statistics and reporting in APA style","text":"paired designs need set paired = TRUE, , based numbers groups detected removing missing values, test run depending parameters stablished.","code":""},{"path":"https://matcasti.github.io/writR/index.html","id":"id_-2-groups","dir":"","previous_headings":"Paired samples design","what":"> 2 groups","title":"Inferential statistics and reporting in APA style","text":"type = 'auto' next assumptions checked > 2 paired samples: However, can specify parameters selection test:","code":"n <- 40 set.seed(123) cancer <- data.frame(   id = rep(seq_len(n), 3)   , cells = round(c(rnorm(n = n, mean = 100, sd = 15)   # Basal            , rnorm(n = n, mean = 98, sd = 10)   # Time-1            , rnorm(n = n, mean = 96, sd = 5) )) # Time-2   , period = gl(n = 3, k = n, labels = c('Basal', 'Time-1', 'Time-2') ) )  result <- k_sample(   data = cancer   , x = \"period\"   , y = \"cells\"   , rowid = \"id\"   , paired = TRUE   )  # Access the whole results print(result) #>         y      x statistic      df df.error   p.value                method #>    <char> <char>     <num>   <num>    <num>     <num>                <char> #> 1:  cells period  2.231395 1.77965 69.40635 0.1206689 Huynh-Feldt's rmANOVA #>      estimate conf.level conf.low conf.high              effectsize n_obs #>         <num>      <num>    <num>     <num>                  <char> <num> #> 1: 0.01998957       0.95        0         1 Omega-squared (partial)    40  # For inline resutls or statistical reports lablr(result) #>                  stats       p            es                ci #>                 <char>  <char>        <char>            <char> #> 1: F(1.8, 69.4) = 2.23 p 0.121 omega2 = 0.02 CI95 [0.00, 1.00] #>                                                              full #>                                                            <char> #> 1: F(1.8, 69.4) = 2.23, p 0.121, omega2 = 0.02, CI95 [0.00, 1.00]"},{"path":"https://matcasti.github.io/writR/index.html","id":"id_2-groups","dir":"","previous_headings":"Paired samples design","what":"2 groups","title":"Inferential statistics and reporting in APA style","text":"Similar , type = 'auto' assumptions checked 2 paired samples: , can specify parameters selection test:","code":"cancer_two <- cancer[cancer$period %in% c('Time-1','Time-2'),]    result <- k_sample(   data = cancer_two   , x = \"period\"   , y = \"cells\"   , paired = TRUE )  # Access the whole results print(result) #>         y      x statistic    df df.error   p.value           method   estimate #>    <char> <char>     <num> <num>    <num>     <num>           <char>      <num> #> 1:  cells period  1.196787     1       39 0.2806758 Fisher's rmANOVA 0.00267743 #>    conf.level conf.low conf.high              effectsize n_obs #>         <num>    <num>     <num>                  <char> <num> #> 1:       0.95        0         1 Omega-squared (partial)    40  # For inline results lablr(result) #>              stats       p            es                ci #>             <char>  <char>        <char>            <char> #> 1: F(1, 39) = 1.20 p 0.281 omega2 = 0.00 CI95 [0.00, 1.00] #>                                                          full #>                                                        <char> #> 1: F(1, 39) = 1.20, p 0.281, omega2 = 0.00, CI95 [0.00, 1.00]"},{"path":"https://matcasti.github.io/writR/index.html","id":"independent-samples-design","dir":"","previous_headings":"","what":"Independent samples design","title":"Inferential statistics and reporting in APA style","text":"independent samples need set paired = FALSE, , based numbers groups detected, test run depending parameters stablished.","code":""},{"path":"https://matcasti.github.io/writR/index.html","id":"id_-2-groups-1","dir":"","previous_headings":"Independent samples design","what":"> 2 groups","title":"Inferential statistics and reporting in APA style","text":"type = 'auto' next assumptions checked > 2 independent samples: However, can specify parameters selection test:","code":"set.seed(123) cancer_unpaired <- data.frame(     cells = round(c(rnorm(n = n, mean = 100, sd = 20)   # Control            , rnorm(n = n, mean = 95, sd = 12)   # Drug A            , rnorm(n = n, mean = 90, sd = 15) )) # Drug B   , group = gl(n = 3, k = n, labels = c('Control', 'Drug A', 'Drug B') ) )  result <- k_sample(   data = cancer_unpaired   , x = \"group\"   , y = \"cells\"   , paired = FALSE   , posthoc = TRUE   )  # Check results print(result) #>         y      x statistic    df df.error    p.value        method   estimate #>    <char> <char>     <num> <num>    <num>      <num>        <char>      <num> #> 1:  cells  group  4.861757     2 75.91708 0.01030964 Welch's ANOVA 0.08914428 #>    conf.level    conf.low conf.high              effectsize n_obs #>         <num>       <num>     <num>                  <char> <int> #> 1:       0.95 0.005281224         1 Omega-squared (partial)   120  # For inline results lablr(result) #>                  stats       p            es                ci #>                 <char>  <char>        <char>            <char> #> 1: F(2.0, 75.9) = 4.86 p 0.010 omega2 = 0.09 CI95 [0.01, 1.00] #>                                                              full #>                                                            <char> #> 1: F(2.0, 75.9) = 4.86, p 0.010, omega2 = 0.09, CI95 [0.01, 1.00]"},{"path":"https://matcasti.github.io/writR/index.html","id":"id_2-groups-1","dir":"","previous_headings":"Independent samples design","what":"2 groups","title":"Inferential statistics and reporting in APA style","text":"Just like , type = 'auto' assumptions checked 2 independent samples: can specify parameters selection test well:","code":"result <- k_sample(   data = cancer_unpaired[cancer_unpaired$group %in% c('Drug A','Drug B'),]   , x = \"group\"   , y = \"cells\"   , var.equal = FALSE   )  # For tabular results print(result) #>         y      x statistic    df df.error    p.value         method   estimate #>    <char> <char>     <num> <num>    <num>      <num>         <char>      <num> #> 1:  cells  group   3.08189     1       78 0.08309445 Fisher's ANOVA 0.02536358 #>    conf.level conf.low conf.high              effectsize n_obs #>         <num>    <num>     <num>                  <char> <int> #> 1:       0.95        0         1 Omega-squared (partial)    80  # For inline results (e.g. manuscript) lablr(result) #>              stats       p            es                ci #>             <char>  <char>        <char>            <char> #> 1: F(1, 78) = 3.08 p 0.083 omega2 = 0.03 CI95 [0.00, 1.00] #>                                                          full #>                                                        <char> #> 1: F(1, 78) = 3.08, p 0.083, omega2 = 0.03, CI95 [0.00, 1.00]"},{"path":"https://matcasti.github.io/writR/index.html","id":"mixed-effects-anova","dir":"","previous_headings":"","what":"Mixed effects ANOVA","title":"Inferential statistics and reporting in APA style","text":"using aov_r function possible get statistical report /within-subject(s) factor(s) factorial designs using afex package hood statistical reporting. Let’s see example inline results previous data something like : order analyze effect gender subjects’ scores evaluation periods, performed analysis variance (ANOVA) - within-subjects factors. analyses, find gender large effect ( inline[\"gender\", paste(es, ci, sep = \", \")] ) scores adjusting time periods, inline[\"gender\", paste(stats, p, sep = \", \")]. similar way find significant interaction evaluative time gender ( inline[\"gender:time\", paste(stats, p, sep = \", \")] ), indicating unequal responses males females time, inline[\"gender:time\", paste(es, ci, sep = \", \")], however, time alone able explain statistically significantly variance scores, inline[\"time\"]$full. translate evaluation R Markdown: order analyze effect gender subjects’ scores evaluation periods, performed analysis variance (ANOVA) - within-subjects factors. analyses, find gender large effect (omega2 = 0.65, CI95 [0.54, 1.00]) scores adjusting time periods, F(1, 68) = 130.74, p < 0.001. similar way find significant interaction evaluative time gender ( F(2, 136) = 42.88, p < 0.001 ), indicating unequal responses males females time, omega2 = 0.29, CI95 [0.17, 0.40], however, time alone able explain statistically significantly variance scores, F(2, 136) = 0.24, p = 0.79, omega2 = -0.01, CI95 [0.00, 0.00]. 1 factor (within subjects) specify character vector: = c('factor1', 'factor2' ...), within = c('factor1', 'factor2' ...).","code":"# set parameters to simulate data with a between and within subject factor within <- 3 between <- 2 n <- 70  set.seed(123) stroop <- data.frame(   subject = rep(1:n, within),   gender = gl(between, n/between, length = n*within, labels = c('Male','Female')),   time = gl(within, n, length = n*within),   score = rnorm(n*within, mean = 150, sd = 30))  # Manipulate data to generate interaction between Gender and Time stroop <- within(stroop, {   score[gender == 'Male' & time == 1] <- score[gender == 'Male' & time == 1]*1   score[gender == 'Male' & time == 2] <- score[gender == 'Male' & time == 2]*1.15   score[gender == 'Male' & time == 3] <- score[gender == 'Male' & time == 3]*1.3   score[gender == 'Female' & time == 1] <- score[gender == 'Female' & time == 1]*1   score[gender == 'Female' & time == 2] <- score[gender == 'Female' & time == 2]*0.85   score[gender == 'Female' & time == 3] <- score[gender == 'Female' & time == 3]*0.7 })   result <- aov_r(   data = stroop , response = \"score\" , between = \"gender\" , within = \"time\" , rowid = \"subject\" , effsize.type = 'omega' # omega squared as our measure of effect size , sphericity = 'auto' # check if sphericity is not being violated )  # Check results print(result) #>         y           x   statistic    df df.error      p.value           method #>    <char>      <char>       <num> <num>    <num>        <num>           <char> #> 1:  score      gender 130.7357382     1       68 1.720992e-17   Fisher's ANOVA #> 2:  score        time   0.2367333     2      136 7.895263e-01 Fisher's rmANOVA #> 3:  score gender:time  42.8799011     2      136 3.635914e-15 Fisher's rmANOVA #>     estimate conf.level  conf.low conf.high     effectsize n_obs #>        <num>      <num>     <num>     <num>         <char> <int> #> 1: 0.6495369       0.95 0.5389314         1 Omega2_partial    70 #> 2: 0.0000000       0.95 0.0000000         1 Omega2_partial    70 #> 3: 0.2893804       0.95 0.1844234         1 Omega2_partial    70  # And inline results for reporting purposes inline <- result[j = lablr(.SD), keyby = x]  print(inline[,c(\"x\", \"full\")]) #> Key: <x> #>              x                                                         full #>         <char>                                                       <char> #> 1:      gender F(1, 68) = 130.74, p 2e-17, omega2 = 0.65, CI95 [0.54, 1.00] #> 2: gender:time F(2, 136) = 42.88, p 4e-15, omega2 = 0.29, CI95 [0.18, 1.00] #> 3:        time  F(2, 136) = 0.24, p 0.790, omega2 = 0.00, CI95 [0.00, 1.00]"},{"path":"https://matcasti.github.io/writR/index.html","id":"testing-categorical-data","dir":"","previous_headings":"","what":"Testing categorical data","title":"Inferential statistics and reporting in APA style","text":"test purely categorical data, contingency() function guy.","code":""},{"path":"https://matcasti.github.io/writR/index.html","id":"goodness-of-fit-chi-squared","dir":"","previous_headings":"Testing categorical data","what":"Goodness-of-fit Chi-squared","title":"Inferential statistics and reporting in APA style","text":"filling data, x argument, Goodness--fit chi-squared test (χ2gof) inline result look like : preliminary analyses, ’ve seen proportion pacients across groups, inline$full. translates : preliminary analyses, ’ve seen proportion pacients across groups, X2(2) = 0.00, p = 1, V = 0.00, CI95 [0.00, 0.00].","code":"result <- contingency(   data = cancer_unpaired[-(1:10),], # 3 groups: Control, Drug A, Drug B   x = \"group\" )  # Tabular format dropping empty columns print(result) #>         x statistic    df   p.value                                   method #>    <char>     <num> <num>     <num>                                   <char> #> 1:  group  1.818182     2 0.4028903 Chi-squared test for given probabilities #>     estimate conf.level conf.low conf.high  effectsize #>        <num>      <num>    <num>     <num>      <char> #> 1: 0.1275153       0.95        0         1 Pearson's C  # For inline results inline <- lablr(result, markdown = T)"},{"path":"https://matcasti.github.io/writR/index.html","id":"pearsons-chi-squared","dir":"","previous_headings":"Testing categorical data","what":"Pearson’s Chi-squared","title":"Inferential statistics and reporting in APA style","text":"providing x y arguments contingency() get Pearson’s Chi-squared test.","code":"result <- contingency(   data = mtcars, # Using mtcars data   x = \"cyl\",   y = \"gear\" )  # Statistics in tabular format print(result) #>         y      x statistic    df     p.value                     method #>    <char> <char>     <num> <int>       <num>                     <char> #> 1:   gear    cyl  18.03636     4 0.001214066 Pearson's Chi-squared test #>     estimate conf.level   conf.low conf.high effectsize #>        <num>      <num>      <num>     <num>     <char> #> 1: 0.4819631       0.95 0.07050663         1 Cramer's V  # Inline results format lablr(result) #>            stats       p       es                ci #>           <char>  <char>   <char>            <char> #> 1: X2(4) = 18.04 p 0.001 V = 0.48 CI95 [0.07, 1.00] #>                                                   full #>                                                 <char> #> 1: X2(4) = 18.04, p 0.001, V = 0.48, CI95 [0.07, 1.00]"},{"path":"https://matcasti.github.io/writR/index.html","id":"fishers-exact-test","dir":"","previous_headings":"Testing categorical data","what":"Fisher’s exact test","title":"Inferential statistics and reporting in APA style","text":"Otherwise, use Fisher’s exact test count data specify exact = TRUE.","code":"result <- contingency(   data = mtcars,    x = \"cyl\",   y = \"gear\",   exact = TRUE  )  # Statistics in tabular format print(result) #>         y      x statistic    df     p.value                     method #>    <char> <char>     <num> <int>       <num>                     <char> #> 1:   gear    cyl  18.03636     4 0.001214066 Pearson's Chi-squared test #>     estimate conf.level   conf.low conf.high effectsize #>        <num>      <num>      <num>     <num>     <char> #> 1: 0.4819631       0.95 0.07050663         1 Cramer's V  # Inline results format lablr(result) #>            stats       p       es                ci #>           <char>  <char>   <char>            <char> #> 1: X2(4) = 18.04 p 0.001 V = 0.48 CI95 [0.07, 1.00] #>                                                   full #>                                                 <char> #> 1: X2(4) = 18.04, p 0.001, V = 0.48, CI95 [0.07, 1.00]"},{"path":"https://matcasti.github.io/writR/index.html","id":"mcnemars-chi-squared-test","dir":"","previous_headings":"Testing categorical data","what":"McNemar’s Chi-squared Test","title":"Inferential statistics and reporting in APA style","text":"paired design using categorical variables, McNemar’s Chi-squared Test Count data test go.","code":"## Presidential Approval Ratings. ## Approval of the President's performance in office in two surveys, ## one month apart, for a random sample of 1600 voting-age Americans.  performance <- data.frame(   id = rep(1:1600, 2),   `1st survey` = c(rep(\"Approve\", 944), rep(\"Disapprove\", 656)),   `2nd survey` = c(rep(\"Approve\", 794), rep(\"Disapprove\", 150),                    rep(\"Approve\", 86), rep(\"Disapprove\", 570)), check.names = F)  result <- contingency(   data = performance,   x = \"1st survey\",   y = \"2nd survey\",   paired = TRUE # Set TRUE for McNemar test )  # Statistics in tabular format print(result) #>             y          x statistic    df      p.value #>        <char>     <char>     <num> <num>        <num> #> 1: 2nd survey 1st survey  34.71186     1 3.822946e-09 #>                        method  estimate conf.level   conf.low conf.high #>                        <char>     <num>      <num>      <num>     <num> #> 1: McNemar's Chi-squared test 0.1355932       0.95 0.09124332 0.1777538 #>    effectsize #>        <char> #> 1:  Cohen's g  # Inline results lablr(result) #>            stats       p       es                ci #>           <char>  <char>   <char>            <char> #> 1: X2(1) = 34.71 p 4e-09 g = 0.14 CI95 [0.09, 0.18] #>                                                   full #>                                                 <char> #> 1: X2(1) = 34.71, p 4e-09, g = 0.14, CI95 [0.09, 0.18]"},{"path":"https://matcasti.github.io/writR/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Inferential statistics and reporting in APA style","text":"package writR standing shoulders giants. writR depends following packages:","code":"deepdep::plot_dependencies('writR', local = TRUE, depth = 3)"},{"path":"https://matcasti.github.io/writR/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Inferential statistics and reporting in APA style","text":"like thank developers statsExpressions ggstatsplot inspiration package. Naturally package first steps, hope future collaborative work can expand potential package.","code":""},{"path":"https://matcasti.github.io/writR/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Inferential statistics and reporting in APA style","text":"cite package ‘writR’ publications run following code R console:","code":"citation('writR') #> To cite package 'writR' in publications use: #>  #>   Castillo Aguilar M (2021). _writR: Inferential statistics and #>   reporting in APA style_. R package version 1.0.1, #>   <https://github.com/matcasti/writR>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {writR: Inferential statistics and reporting in APA style}, #>     author = {Matías {Castillo Aguilar}}, #>     year = {2021}, #>     note = {R package version 1.0.1}, #>     url = {https://github.com/matcasti/writR}, #>   }"},{"path":"https://matcasti.github.io/writR/reference/GG.html","id":null,"dir":"Reference","previous_headings":"","what":"Greenhouse-Geisser epsilon — GG","title":"Greenhouse-Geisser epsilon — GG","text":"Internal function inside sphericity_check. Returns Greenhouse-Geisser epsilon corrections departure sphericity","code":""},{"path":"https://matcasti.github.io/writR/reference/GG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Greenhouse-Geisser epsilon — GG","text":"","code":"GG(model)"},{"path":"https://matcasti.github.io/writR/reference/GG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Greenhouse-Geisser epsilon — GG","text":"model repeated measures ANOVA model using afex.","code":""},{"path":"https://matcasti.github.io/writR/reference/HF.html","id":null,"dir":"Reference","previous_headings":"","what":"Hyunh-Feldt epsilon — HF","title":"Hyunh-Feldt epsilon — HF","text":"Internal function inside sphericity_check. Returns Hyunh-Feldt epsilon corrections departure sphericity","code":""},{"path":"https://matcasti.github.io/writR/reference/HF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hyunh-Feldt epsilon — HF","text":"","code":"HF(model, gg = NULL)"},{"path":"https://matcasti.github.io/writR/reference/HF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hyunh-Feldt epsilon — HF","text":"model repeated measures ANOVA model using afex. gg Greenhouse-Geisser epsilon. Used posterior calculations. supplied calculated.","code":""},{"path":"https://matcasti.github.io/writR/reference/aov_r.html","id":null,"dir":"Reference","previous_headings":"","what":"ANOVA for factorial designs — aov_r","title":"ANOVA for factorial designs — aov_r","text":"wrapper around afex::aov_ez wich allows mix effects model.","code":""},{"path":"https://matcasti.github.io/writR/reference/aov_r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ANOVA for factorial designs — aov_r","text":"","code":"aov_r(   data,   response,   between = NULL,   within = NULL,   rowid = NULL,   ss_type = 3,   effsize.type = \"unbiased\",   sphericity = \"auto\",   conf.level = 0.95,   character.only = FALSE,   markdown )"},{"path":"https://matcasti.github.io/writR/reference/aov_r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ANOVA for factorial designs — aov_r","text":"data dataset long format, can missing values. response Response variable, numeric. Character indicating -subject(s) factor(s)/column(s) data. Default NULL indicating -subjects factors. Must character vector one -subject(s) factor(s)/column(s) specified. within Character indicating within-subject(s) factor(s)/column(s) data. Default NULL indicating -subjects factors. Must character vector one within-subject(s) factor(s)/column(s) specified. rowid Character (length 1) indicating subject identifier column data. ss_type Type sum squares repeated measures ANOVA (defaults 3). Possible values \"II\", \"III\", 2, 3. effsize.type effect size used estimate effects factors response variable. Possible values \"eta\" (\"biased\") \"omega\" (\"unbiased\", default). sphericity \"none\", sphericity assumption assumed met within-subject(s) factor(s). \"GG\": applies Greenhouse-Geisser correction. \"HF\": applies Hyunh-Feldt correction. 'auto' (Default) choose appropiate correction based Mauchly test sphericity (p-value > 0.05) conf.level Confidence/Credible Interval (CI) level. Default 0.95 (95%). character.Logical. checks whether use unevaluated expression content (TRUE), asumming character vector. Defaults FALSE. markdown Logical (default FALSE). lbl TRUE, argument specify report-ready labels formated inline code R markdown (using mathjax markdown syntax), output plain text (default).","code":""},{"path":"https://matcasti.github.io/writR/reference/aov_r.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ANOVA for factorial designs — aov_r","text":"list statistical results.","code":""},{"path":"https://matcasti.github.io/writR/reference/cent_disp.html","id":null,"dir":"Reference","previous_headings":"","what":"Inline summary descriptive — cent_disp","title":"Inline summary descriptive — cent_disp","text":"function returns character vector mean sd median iqr inline summary statistics reports articles R markdown plain text.","code":""},{"path":"https://matcasti.github.io/writR/reference/cent_disp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inline summary descriptive — cent_disp","text":"","code":"cent_disp(   x,   type = if (is.null(str.a)) \"auto\" else \"custom\",   str.a = NULL,   k = 1,   markdown = TRUE )"},{"path":"https://matcasti.github.io/writR/reference/cent_disp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inline summary descriptive — cent_disp","text":"x Numeric vector. type choose parametric (type = 'p') estimate (.e. mean sd) non-parametric one (type = 'np', median iqr). Can choosen automatically type = 'auto. can set 'custom' can insert expresions using glue syntax str.argument. str.Works type = 'custom'. Allows set expresions using glue syntax, e.g. str.= \"{median} (*MAD* = {mad}, *IQR* = {IQR}) k Number decimals. markdown Whether want output formated inline R markdown (TRUE) plain text (FALSE).","code":""},{"path":"https://matcasti.github.io/writR/reference/cent_disp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inline summary descriptive — cent_disp","text":"character vector length one.","code":""},{"path":"https://matcasti.github.io/writR/reference/clean_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove NA's from long to wide/long data.table — clean_data","title":"Remove NA's from long to wide/long data.table — clean_data","text":"function allows removing NA's long format data wide (long) format data, even suporting repeated measures designs (.e., one subject per factor level).","code":""},{"path":"https://matcasti.github.io/writR/reference/clean_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove NA's from long to wide/long data.table — clean_data","text":"","code":"clean_data(   data,   x,   y,   rowid = NULL,   paired = FALSE,   wide = FALSE,   character.only = FALSE,   ... )"},{"path":"https://matcasti.github.io/writR/reference/clean_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove NA's from long to wide/long data.table — clean_data","text":"data Data x y (possibly rowid provided) searched. x Name grouping factor. Must present data y Name response variable. Must present data. rowid Name subject-id column. null, assumed data sorted paired designs, creating one. data sorted leave argument unspecified, results can inaccurate two levels x NAs present. Ignored paired FALSE. paired Logical decides whether experimental design repeated measures/within-subjects -subjects. default FALSE. wide Logical whether return data.frame wide format (TRUE, .e. one columns per group/time) long format (FALSE). character.Logical. checks whether use unevaluated expression content (TRUE), asumming character vector. Defaults FALSE. ... Currently ignored.","code":""},{"path":"https://matcasti.github.io/writR/reference/contingency.html","id":null,"dir":"Reference","previous_headings":"","what":"Report categorical analyses — contingency","title":"Report categorical analyses — contingency","text":"Perform nominal/ordinal analysis 1 dimensional table goodnes--fit chi-squared, two dimensional data Pearson chi-squared, Fisher exact test (paired), McNemar test reporting corresponding stats effect sizes APA Style.","code":""},{"path":"https://matcasti.github.io/writR/reference/contingency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report categorical analyses — contingency","text":"","code":"contingency(   data,   x,   y = NULL,   paired = FALSE,   ratio = NULL,   conf.level = 0.95,   character.only = FALSE,   ... )"},{"path":"https://matcasti.github.io/writR/reference/contingency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report categorical analyses — contingency","text":"data Data frame containing variables x y. x Factor variable, quoted unquoted. y Factor. NULL, goodness--fit carried, otherwise two-way analysis performed. paired Logical. TRUE McNemar's Chi-squared test carried . ratio vector probabilities length x. error given entry p negative. conf.level Confidence/Credible Interval (CI) level. Default 0.95 (95%). character.Logical. checks whether use unevaluated expression content (TRUE), asumming character vector. Defaults FALSE. ... Currently used.","code":""},{"path":"https://matcasti.github.io/writR/reference/deparser.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the deparsed value of the outermost expression — deparser","title":"Get the deparsed value of the outermost expression — deparser","text":"Get deparsed value outermost expression","code":""},{"path":"https://matcasti.github.io/writR/reference/deparser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the deparsed value of the outermost expression — deparser","text":"","code":"deparser(x, character.only = FALSE, ...)"},{"path":"https://matcasti.github.io/writR/reference/deparser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the deparsed value of the outermost expression — deparser","text":"x expression capture outermost expression. character.whether treat x character. Default FALSE. ... Currently used.","code":""},{"path":"https://matcasti.github.io/writR/reference/is_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Normality check — is_normal","title":"Normality check — is_normal","text":"Normality check","code":""},{"path":"https://matcasti.github.io/writR/reference/is_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normality check — is_normal","text":"","code":"is_normal(x, alpha = 0.05, test)"},{"path":"https://matcasti.github.io/writR/reference/is_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normality check — is_normal","text":"x Numeric vector without NA's. alpha Threshold rejection null hipotesis (normality). test function returns single numeric value (p.value) tested.","code":""},{"path":"https://matcasti.github.io/writR/reference/is_var.equal.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for Homogeneity of Variances — is_var.equal","title":"Test for Homogeneity of Variances — is_var.equal","text":"Test Homogeneity Variances","code":""},{"path":"https://matcasti.github.io/writR/reference/is_var.equal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for Homogeneity of Variances — is_var.equal","text":"","code":"is_var.equal(y, x, alpha = 0.05, test = \"levene\", center = stats::median)"},{"path":"https://matcasti.github.io/writR/reference/is_var.equal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for Homogeneity of Variances — is_var.equal","text":"y Numeric vector (response). x Grouping factor. alpha Threshold null hipotesis (normality) rejection. Defaults 0.05 test character indicating whether use Levene's test (\"levene\", default) Fligner's test (\"fligner\"). first letter used. center function compute center group (valid Levene's Test). mean gives original Levene's test; default, median, provides robust test.","code":""},{"path":"https://matcasti.github.io/writR/reference/is_var.equal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for Homogeneity of Variances — is_var.equal","text":"logical length one, indicating p.value test greater alpha (defaults 0.05).","code":""},{"path":"https://matcasti.github.io/writR/reference/k_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"K Sample test — k_sample","title":"K Sample test — k_sample","text":"list containing results multi-sample test.","code":""},{"path":"https://matcasti.github.io/writR/reference/k_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"K Sample test — k_sample","text":"","code":"k_sample(   data,   x,   y,   rowid = NULL,   type,   paired = FALSE,   var.equal = FALSE,   is_spherical = NULL,   adjust = NULL,   effsize.type = \"unbiased\",   conf.level = 0.95,   character.only = FALSE,   ... )"},{"path":"https://matcasti.github.io/writR/reference/k_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"K Sample test — k_sample","text":"data Data frame x y (possibly rowid provided) searched. x Character grouping factor. Must present data y Character response variable. Must present data. rowid Character subject-id column. null, assumed data sorted paired designs, creating one. data sorted leave argument unspecified, results can inaccurate two levels x NAs present. type Missing (default) NULL checking normality homogeneity variances test selection. options \"p\" parametric, \"np\" non-parametric \"r\" robust tests. paired Logical decides whether experimental design repeated measures/within-subjects -subjects. default FALSE. var.equal Logical variable indicating whether treat two variances equal. TRUE pooled variance used estimate variance otherwise Welch (Satterthwaite) approximation degrees freedom used. is_spherical Logical. checks whether assume sphericity assumptions holds , NULL (default) tested using mauchly's test threshold 0.05. adjust Character. correction sphericity applied, can character length one starting 'g' (indicating Greenhouse–Geisser correction) 'h' (indicating Huynh–Feldt correction). effsize.type Options \"unbiased\" \"omega\" partial omega squared \"biased\" \"eta\" partial eta squared measure effect size. non-parametric analysis, Kendalls' W used paired designs, rank epsilon squared used independent groups designs. conf.level Confidence/Credible Interval (CI) level. Default 0.95 (95%). character.Logical. checks whether use unevaluated expression content (TRUE), asumming character vector. Defaults FALSE. ... Currently ignored.","code":""},{"path":"https://matcasti.github.io/writR/reference/lablr.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate report-ready labels for statistical report — lablr","title":"Generate report-ready labels for statistical report — lablr","text":"list containing stats, p value, effectsize, confidence/credible interval concatenated string named 'full'.","code":""},{"path":"https://matcasti.github.io/writR/reference/lablr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate report-ready labels for statistical report — lablr","text":"","code":"lablr(t, markdown = FALSE)"},{"path":"https://matcasti.github.io/writR/reference/lablr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate report-ready labels for statistical report — lablr","text":"t Output functions, k_sample, two_sample one_sample. markdown Logical (default FALSE), indicating report-ready labels formated inline code R markdown (using mathjax markdown syntax), output plain text (default).","code":""},{"path":"https://matcasti.github.io/writR/reference/mauchly.html","id":null,"dir":"Reference","previous_headings":"","what":"Mauchly's Test of Sphericity — mauchly","title":"Mauchly's Test of Sphericity — mauchly","text":"Internal function inside sphericity_check. Return p-value Mauchly's Test within-subjects factors.","code":""},{"path":"https://matcasti.github.io/writR/reference/mauchly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mauchly's Test of Sphericity — mauchly","text":"","code":"mauchly(model)"},{"path":"https://matcasti.github.io/writR/reference/mauchly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mauchly's Test of Sphericity — mauchly","text":"model repeated measures ANOVA model using afex.","code":""},{"path":"https://matcasti.github.io/writR/reference/one_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"One Sample test — one_sample","title":"One Sample test — one_sample","text":"list containing results one-sample test.","code":""},{"path":"https://matcasti.github.io/writR/reference/one_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One Sample test — one_sample","text":"","code":"one_sample(   data,   y,   type,   test.value = 0,   effsize.type = \"unbiased\",   alternative = \"two.sided\",   conf.level = 0.95,   character.only = FALSE,   markdown,   ... )"},{"path":"https://matcasti.github.io/writR/reference/one_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One Sample test — one_sample","text":"data data frame x y (possibly rowid provided) searched. y Character response variable Must present data type set \"auto\" (default) checking normality test selection. options \"p\" parametric, \"np\" non-parametric \"r\" robust tests. test.value number indicating true value mean (Default: 0) tested. effsize.type options \"unbiased\" \"g\" Hedges g \"biased\" \"d\" Cohen's d measure effect size. rank-biserial correlation used non-parametric analysis. alternative character string specifying alternative hypothesis, must one \"two.sided\" (default), \"greater\" \"less\". conf.level Confidence/Credible Interval (CI) level. Default 0.95 (95%). character.whether treat x character. Default FALSE. markdown Logical (default FALSE). lbl TRUE, argument specify report-ready labels formated inline code R markdown (using mathjax markdown syntax), output plain text (default). ... Currently ignored.","code":""},{"path":"https://matcasti.github.io/writR/reference/pairs_two_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairwise Two Sample test — pairs_two_sample","title":"Pairwise Two Sample test — pairs_two_sample","text":"wrapper around two_sample() pairwise comparisons. posthoc testing recomend using pairwise_test() accordingly.","code":""},{"path":"https://matcasti.github.io/writR/reference/pairs_two_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairwise Two Sample test — pairs_two_sample","text":"","code":"pairs_two_sample(   data,   x,   y,   rowid = NULL,   type,   paired = FALSE,   var.equal = FALSE,   effsize.type = \"unbiased\",   alternative = \"two.sided\",   conf.level = 0.95,   markdown,   character.only = FALSE,   ... )"},{"path":"https://matcasti.github.io/writR/reference/pairs_two_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pairwise Two Sample test — pairs_two_sample","text":"data Data frame x y (possibly rowid provided) searched. x Character grouping factor. Must present data y Character response variable. Must present data. rowid Character subject-id column. null, assumed data sorted paired designs, creating one. data sorted leave argument unspecified, results can inaccurate two levels x NAs present. type Set \"auto\" (default) checking normality homogeneity variances test selection. options \"p\" parametric, \"np\" non-parametric \"r\" robust tests. paired Logical decides whether experimental design repeated measures/within-subjects -subjects. default FALSE. var.equal Logical variable indicating whether treat two variances equal. TRUE pooled variance used estimate variance otherwise Welch (Satterthwaite) approximation degrees freedom used. effsize.type Options \"unbiased\" \"g\" Hedges g \"biased\" \"d\" Cohen's d measure effect size parametric test. rank-biserial correlation used non-parametric analysis. alternative character string specifying alternative hypothesis, must one \"two.sided\" (default), \"greater\" \"less\". conf.level Confidence/Credible Interval (CI) level. Default 0.95 (95%). markdown Logical (default FALSE). lbl TRUE, argument specify report-ready labels formated inline code R markdown (using mathjax markdown syntax), output plain text (default). character.Logical. checks whether use unevaluated expression content (TRUE), asumming character vector. Defaults FALSE. ... Currently ignored.","code":""},{"path":"https://matcasti.github.io/writR/reference/pairwise_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairwise Comparisons — pairwise_test","title":"Pairwise Comparisons — pairwise_test","text":"Pairwise comparisons Post-hoc testing.","code":""},{"path":"https://matcasti.github.io/writR/reference/pairwise_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairwise Comparisons — pairwise_test","text":"","code":"pairwise_test(   data,   x,   y,   rowid = NULL,   type = \"auto\",   paired = FALSE,   var.equal = FALSE,   trim = 0.2,   nboot = 100L,   p.adjust.method = \"none\",   alternative = \"two.sided\",   conf.level = 0.95,   internal = FALSE,   ... )"},{"path":"https://matcasti.github.io/writR/reference/pairwise_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pairwise Comparisons — pairwise_test","text":"data Data frame x y (possibly rowid provided) searched. x Character grouping factor. Must present data y Character response variable. Must present data. rowid Character subject-id column. null, assumed data sorted paired designs, creating one. data sorted leave argument unspecified, results can inaccurate two levels x NAs present. type Set \"auto\" (default) checking normality homogeneity variances test selection. options \"p\" parametric, \"np\" non-parametric \"r\" robust tests. paired Logical decides whether experimental design repeated measures/within-subjects -subjects. default FALSE. var.equal Logical variable indicating whether treat two variances equal. TRUE pooled variance used estimate variance otherwise Welch (Satterthwaite) approximation degrees freedom used. trim Trim level mean carrying robust tests. case error, try reducing value tr, default set 0.2. Lowering value might help. nboot Number bootstrap samples computing confidence interval effect size (Default: 100L). p.adjust.method Adjustment method p-values multiple comparisons. Possible methods : \"holm\", \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"\", \"fdr\", \"none\" (default). alternative character string specifying alternative hypothesis, must one \"two.sided\" (default), \"greater\" \"less\". conf.level Confidence/Credible Interval (CI) level. Default 0.95 (95%). internal Logical whether function used inside functions. ... Currently ignored.","code":""},{"path":"https://matcasti.github.io/writR/reference/rm_anova.html","id":null,"dir":"Reference","previous_headings":"","what":"Repeated measures ANOVA — rm_anova","title":"Repeated measures ANOVA — rm_anova","text":"functions allows perform one way repeated measures ANOVA, making adjustments violations sphericity, dependencies related {afex} {car} packages.","code":""},{"path":"https://matcasti.github.io/writR/reference/rm_anova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repeated measures ANOVA — rm_anova","text":"","code":"rm_anova(   data,   x,   y,   is_spherical,   adjust,   effsize.type = \"omega\",   conf.level = 0.95,   character.only = FALSE,   ... )"},{"path":"https://matcasti.github.io/writR/reference/rm_anova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repeated measures ANOVA — rm_anova","text":"data Data frame x y (possibly rowid provided) searched. x Character name grouping factor. Must present data y Character name response variable. Must present data. is_spherical Logical. checks whether assume sphericity assumptions holds , missing (default) tested using mauchly test threshold 0.05. adjust Character. correction sphericity applied, can character length one starting 'g' (indicating Greenhouse–Geisser correction) 'h' (indicating Huynh–Feldt correction). effsize.type Options \"unbiased\" \"omega\" partial omega squared \"biased\" \"eta\" partial eta squared measure effect size. non-parametric analysis, Kendalls' W used paired designs, rank epsilon squared used independent groups designs. conf.level Confidence/Credible Interval (CI) level. Default 0.95 (95%). character.Logical. checks whether use unevaluated expression content (TRUE), asumming character vector. Defaults FALSE. ... Currently used.","code":""},{"path":"https://matcasti.github.io/writR/reference/sphericity.html","id":null,"dir":"Reference","previous_headings":"","what":"Mauchly's Test of Sphericity — sphericity","title":"Mauchly's Test of Sphericity — sphericity","text":"Low-level function behind mauchly.test()","code":""},{"path":"https://matcasti.github.io/writR/reference/sphericity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mauchly's Test of Sphericity — sphericity","text":"","code":"sphericity(   object,   Sigma = diag(nrow = p),   T = Thin.row(Proj(M) - Proj(X)),   M = diag(nrow = p),   X = ~0,   idata = data.frame(index = seq_len(p)) )"},{"path":"https://matcasti.github.io/writR/reference/sphericity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mauchly's Test of Sphericity — sphericity","text":"object object class SSD mlm Sigma matrix proportional . T transformation matrix. default computed M X. M formula matrix describing outer projection. X formula matrix describing inner projection. idata data frame describing intra-block design.","code":""},{"path":"https://matcasti.github.io/writR/reference/sphericity_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggested sphericity correction for repeated measures ANOVA — sphericity_check","title":"Suggested sphericity correction for repeated measures ANOVA — sphericity_check","text":"Internal function inside k_sample. Return Spherecity correction suggested based Mauchly test one-way repeated measures designs","code":""},{"path":"https://matcasti.github.io/writR/reference/sphericity_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suggested sphericity correction for repeated measures ANOVA — sphericity_check","text":"","code":"sphericity_check(model)"},{"path":"https://matcasti.github.io/writR/reference/sphericity_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suggested sphericity correction for repeated measures ANOVA — sphericity_check","text":"model repeated measures ANOVA model using Afex.","code":""},{"path":"https://matcasti.github.io/writR/reference/style.p.html","id":null,"dir":"Reference","previous_headings":"","what":"Style p value — style.p","title":"Style p value — style.p","text":"Style p value pretty printing","code":""},{"path":"https://matcasti.github.io/writR/reference/style.p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style p value — style.p","text":"","code":"style.p(p, k = 3)"},{"path":"https://matcasti.github.io/writR/reference/style.p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style p value — style.p","text":"p Vector p value(s) k Number decimal places","code":""},{"path":"https://matcasti.github.io/writR/reference/style.p.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Style p value — style.p","text":"Character vector length input.","code":""},{"path":"https://matcasti.github.io/writR/reference/subs.html","id":null,"dir":"Reference","previous_headings":"","what":"Always returns the outermost expression — subs","title":"Always returns the outermost expression — subs","text":"Always returns outermost expression","code":""},{"path":"https://matcasti.github.io/writR/reference/subs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Always returns the outermost expression — subs","text":"","code":"subs(x, env, ...)"},{"path":"https://matcasti.github.io/writR/reference/subs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Always returns the outermost expression — subs","text":"https://stackoverflow.com//26558733","code":""},{"path":"https://matcasti.github.io/writR/reference/subs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Always returns the outermost expression — subs","text":"x expression capture outermost expression. env last environment search x. Default missing. ... Currently used.","code":""},{"path":"https://matcasti.github.io/writR/reference/two_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Two Sample test — two_sample","title":"Two Sample test — two_sample","text":"list containing results two-sample test effect size plus confidence intervals.","code":""},{"path":"https://matcasti.github.io/writR/reference/two_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two Sample test — two_sample","text":"","code":"two_sample(   data,   x,   y,   rowid = NULL,   type,   paired = FALSE,   var.equal = FALSE,   effsize.type = \"unbiased\",   alternative = \"two.sided\",   conf.level = 0.95,   character.only = FALSE,   ... )"},{"path":"https://matcasti.github.io/writR/reference/two_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two Sample test — two_sample","text":"data Data frame x y (possibly rowid provided) searched. x Character name grouping factor. Must present data y Character name response variable. Must present data. rowid Character name subject-id column. null, assumed data sorted paired designs, creating one. data sorted leave argument unspecified, results can inaccurate two levels x NAs present. type Set \"auto\" (default) checking normality homogeneity variances test selection. options \"p\" parametric, \"np\" non-parametric \"r\" robust tests. paired Logical decides whether experimental design repeated measures/within-subjects -subjects. default FALSE. var.equal Logical variable indicating whether treat two variances equal. TRUE pooled variance used estimate variance otherwise Welch (Satterthwaite) approximation degrees freedom used. effsize.type Options \"unbiased\" \"g\" Hedges g \"biased\" \"d\" Cohen's d measure effect size. rank-biserial correlation used non-parametric analysis. alternative character string specifying alternative hypothesis, must one \"two.sided\" (default), \"greater\" \"less\". conf.level Confidence/Credible Interval (CI) level. Default 0.95 (95%). character.whether treat x character. Default FALSE. ... Currently ignored.","code":""},{"path":"https://matcasti.github.io/writR/reference/writR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"writR: Inferential statistics and reporting in APA style — writR-package","title":"writR: Inferential statistics and reporting in APA style — writR-package","text":"Perform report basic inferential tests group differences APA style articles writings Markdown plain text format.","code":""},{"path":[]},{"path":"https://matcasti.github.io/writR/reference/writR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"writR: Inferential statistics and reporting in APA style — writR-package","text":"Maintainer: Matías Castillo-Aguilar matcasti@umag.cl (ORCID)","code":""}]
